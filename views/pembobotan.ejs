<!DOCTYPE html>
<html lang="id">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Pembobotan | CDC Universitas Andalas</title>

  <!-- Google Font & Chart.js -->
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">

  <style>
    :root {
      --primary: #1976D2;
      --secondary: #42A5F5;
      --accent: #66BB6A;
      --bg: #ffffff;
      --card-bg: #fff;
      --text-dark: #2c3e50;
      --text-muted: #7f8c8d;
      --radius: 12px;
      --shadow: 0 2px 8px rgba(0,0,0,0.05);
    }

    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      font-family: 'Poppins', sans-serif;
      background: var(--bg);
      margin: 0;
      color: var(--text-dark);
    }

    /* Header */
    .header {
      background: var(--card-bg);
      padding: 20px 50px;
      display: flex;
      align-items: center;
      justify-content: space-between;
      box-shadow: 0 2px 6px rgba(0,0,0,0.05);
    }

    .header-left {
      display: flex;
      align-items: center;
      gap: 20px;
    }

    .header-left img {
      width: 70px;
      height: 70px;
      object-fit: contain;
    }

    .header-center {
      flex: 1;
      text-align: left;
      margin-left: 20px;
    }

    .header-center h1 {
      font-size: 28px;
      font-weight: 600;
      color: var(--text-dark);
      margin: 0;
    }

    .header-center p {
      font-size: 13px;
      color: var(--text-muted);
      margin: 4px 0 0 0;
    }

    .header-center .date {
      font-size: 14px;
      color: var(--primary);
      margin-top: 4px;
    }

    .header-right {
      display: flex;
      gap: 20px;
      align-items: center;
    }

    /* Main Container */
    .container {
      max-width: 1600px;
      margin: 30px auto;
      padding: 0 50px;
    }

    /* Main Content - Two Columns */
    .main-content {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 30px;
      margin-bottom: 40px;
    }

    .section-header {
      display: flex;
      align-items: center;
      justify-content: space-between;
      margin-bottom: 20px;
    }

    .section-header h2 {
      font-size: 24px;
      font-weight: 700;
      color: var(--text-dark);
      margin: 0;
    }

    .btn {
      display: inline-flex;
      align-items: center;
      gap: 8px;
      padding: 10px 20px;
      background: var(--primary);
      color: #fff;
      border: none;
      border-radius: 8px;
      font-size: 14px;
      font-weight: 500;
      cursor: pointer;
      text-decoration: none;
      transition: all 0.3s;
    }

    .btn:hover {
      background: var(--secondary);
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(25, 118, 210, 0.3);
    }

    /* Card Styles */
    .card {
      background: var(--card-bg);
      border-radius: var(--radius);
      box-shadow: var(--shadow);
      padding: 25px;
      margin-bottom: 20px;
    }

    .card h3 {
      font-size: 16px;
      font-weight: 600;
      margin: 0 0 15px 0;
      color: var(--text-dark);
    }

    /* Table Styles */
    .styled-table {
      width: 100%;
      border-collapse: collapse;
    }

    .styled-table thead {
      background: #f8f9fa;
    }

    .styled-table th {
      padding: 12px;
      text-align: left;
      font-size: 13px;
      font-weight: 600;
      color: var(--text-dark);
      border-bottom: 2px solid #e9ecef;
    }

    .styled-table td {
      padding: 12px;
      border-bottom: 1px solid #f1f3f4;
      font-size: 14px;
    }

    .styled-table tbody tr:hover {
      background: #f8f9fa;
    }

    .styled-table td:first-child {
      font-weight: 500;
    }

    .styled-table td.editable {
      cursor: pointer;
      position: relative;
    }

    .styled-table td.editable:hover {
      background: #e3f2fd;
    }

    .styled-table td.editable input {
      width: 100%;
      padding: 4px 8px;
      border: 2px solid var(--primary);
      border-radius: 4px;
      font-size: 14px;
      font-weight: 600;
      text-align: center;
    }

    /* Highlight Card */
    .card.highlight {
      background: linear-gradient(135deg, rgba(102, 187, 106, 0.1), rgba(66, 165, 245, 0.1));
      border: 2px solid rgba(25, 118, 210, 0.2);
    }

    .card.highlight p {
      margin: 0;
      font-size: 15px;
    }

    .card.highlight .label {
      display: inline-block;
      font-weight: 600;
      color: var(--text-dark);
      margin-right: 5px;
    }

    .card.highlight .value {
      font-size: 18px;
      font-weight: 700;
      color: var(--primary);
    }

    /* UMP Table */
    .table-wrapper {
      overflow-x: auto;
      border-radius: 8px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.05);
      margin-bottom: 20px;
      max-height: 600px;
      overflow-y: auto;
    }

    .ump-table {
      width: 100%;
      border-collapse: collapse;
      background: white;
    }

    .ump-table thead {
      position: sticky;
      top: 0;
      background: linear-gradient(135deg, #1976D2, #42A5F5);
      color: white;
      z-index: 10;
    }

    .ump-table th {
      padding: 12px;
      text-align: left;
      font-size: 13px;
      font-weight: 600;
      white-space: nowrap;
    }

    .ump-table tbody tr:nth-child(even) {
      background: #f8f9fa;
    }

    .ump-table td {
      padding: 12px;
      border-bottom: 1px solid #f1f3f4;
      font-size: 13px;
    }

    .ump-table td:nth-child(4) {
      background: #fffbe8;
      font-weight: 600;
    }

    .no-data {
      text-align: center;
      padding: 40px 20px;
      color: var(--text-muted);
      font-style: italic;
    }

    /* Modal */
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0,0,0,0.5);
      z-index: 1000;
      align-items: center;
      justify-content: center;
    }

    .modal.active {
      display: flex;
    }

    .modal-content {
      background: white;
      border-radius: 16px;
      width: 90%;
      max-width: 800px;
      max-height: 90vh;
      overflow-y: auto;
      box-shadow: 0 8px 32px rgba(0,0,0,0.2);
    }

    .modal-header {
      padding: 25px;
      border-bottom: 2px solid #f1f3f4;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .modal-header h2 {
      font-size: 20px;
      font-weight: 600;
      margin: 0;
    }

    .close-btn {
      background: none;
      border: none;
      font-size: 28px;
      color: var(--text-muted);
      cursor: pointer;
      padding: 0;
      width: 32px;
      height: 32px;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .close-btn:hover {
      color: var(--primary);
    }

    .modal-body {
      padding: 25px;
    }

    .modal-footer {
      padding: 20px 25px;
      border-top: 2px solid #f1f3f4;
      display: flex;
      justify-content: flex-end;
      gap: 12px;
    }

    .btn-secondary {
      background: #f8f9fa;
      color: var(--text-dark);
      border: 2px solid #e9ecef;
    }

    .btn-secondary:hover {
      background: #e9ecef;
    }

    /* Edit Form Styles */
    .edit-grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 20px;
      margin-bottom: 25px;
    }

    .form-group {
      margin-bottom: 20px;
    }

    .form-group label {
      display: block;
      font-size: 13px;
      font-weight: 500;
      margin-bottom: 8px;
      color: var(--text-dark);
    }

    .form-group input {
      width: 100%;
      padding: 10px 12px;
      border: 2px solid #e9ecef;
      border-radius: 8px;
      font-size: 14px;
      transition: border-color 0.3s;
    }

    .form-group input:focus {
      outline: none;
      border-color: var(--primary);
    }

    .multiplier-setting {
      background: #f8f9fa;
      padding: 20px;
      border-radius: 8px;
      margin-bottom: 25px;
      border: 2px dashed #dee2e6;
    }

    .multiplier-setting h4 {
      font-size: 14px;
      margin: 0 0 10px 0;
      color: var(--text-dark);
    }

    .multiplier-setting p {
      font-size: 12px;
      color: var(--text-muted);
      margin: 0 0 10px 0;
    }

    /* Footer */
    footer {
      text-align: center;
      padding: 30px;
      color: var(--text-muted);
      font-size: 13px;
      border-top: 1px solid #e9ecef;
      margin-top: 50px;
    }

    /* Responsive */
    @media (max-width: 1200px) {
      .main-content {
        grid-template-columns: 1fr;
      }
    }

    @media (max-width: 768px) {
      .header {
        flex-direction: column;
        padding: 20px;
        gap: 15px;
      }

      .header-center {
        margin-left: 0;
      }

      .container {
        padding: 0 20px;
      }

      .edit-grid {
        grid-template-columns: 1fr;
      }
    }
  </style>
</head>

<body>
  <!-- Header -->
  <div class="header">
    <div class="header-left">
      <img src="/images/logounand.png" alt="Logo UNAND">
    </div>
    <div class="header-center">
      <h1>CDC Universitas Andalas</h1>
      <p>Career Development Center Andalas University</p>
      <div class="date" id="currentDate"></div>
    </div>
    <div class="header-right">
      
    </div>
  </div>

  <!-- Main Content -->
  <main class="container">
    <div class="main-content">
      <!-- Left Section: Pembobotan -->
      <div class="left-section">
        <div class="section-header">
          <h2>Pembobotan</h2>
        </div>

        <!-- Bekerja Section -->
        <div class="card">
          <h3>Pembobotan untuk kriteria Bekerja</h3>
          <table class="styled-table" id="bekerjaTable">
            <thead>
              <tr>
                <th>Gaji / Masa Tunggu</th>
                <th>≤ 6 bulan</th>
                <th>6 < Waktu Tunggu ≤ 12 bulan</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>Gaji ≥ <span id="multiplierDisplay">1.2</span>x UMP</td>
                <td class="editable" onclick="editCell(this, 'bekerja_t6')">1.0</td>
                <td class="editable" onclick="editCell(this, 'bekerja_t12_high')">0.8</td>
              </tr>
              <tr>
                <td>Gaji < <span id="multiplierDisplay2">1.2</span>x UMP</td>
                <td class="editable" onclick="editCell(this, 'bekerja_t6_low')">0.8</td>
                <td class="editable" onclick="editCell(this, 'bekerja_t12')">0.6</td>
              </tr>
            </tbody>
          </table>
        </div>

        <!-- Wiraswasta Section -->
        <div class="card">
          <h3>Pembobotan untuk kriteria Wiraswasta</h3>
          <table class="styled-table" id="wiraswastaTable">
            <thead>
              <tr>
                <th>Pendapatan / Masa Tunggu</th>
                <th>≤ 6 bulan</th>
                <th>6 < Waktu Tunggu ≤ 12 bulan</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>Pendapatan ≥ <span id="multiplierDisplay3">1.2</span>x UMP</td>
                <td class="editable" onclick="editCell(this, 'wiraswasta_t6')">1.2</td>
                <td class="editable" onclick="editCell(this, 'wiraswasta_t12_high')">1.0</td>
              </tr>
              <tr>
                <td>Pendapatan < <span id="multiplierDisplay4">1.2</span>x UMP</td>
                <td class="editable" onclick="editCell(this, 'wiraswasta_t6_low')">1.0</td>
                <td class="editable" onclick="editCell(this, 'wiraswasta_t12')">0.8</td>
              </tr>
            </tbody>
          </table>
        </div>

        <!-- Pendidikan Section -->
        <div class="card highlight">
          <p>
            <span class="label">Pembobotan untuk kriteria melanjutkan studi adalah</span>
            <span class="value editable" onclick="editCell(this, 'pendidikan')" id="pendidikanValue">0.6</span>
          </p>
        </div>

        <button class="btn" onclick="openEditModal()"> Edit Pembobotan</button>
      </div>

      <!-- Right Section: Upah Minimum Provinsi -->
      <div class="right-section">
        <div class="section-header">
          <h2>Upah Minimum Provinsi</h2>
          <button class="btn" onclick="openEditUMPModal()"> Edit UMP</button>
        </div>

        <div class="table-wrapper">
          <table class="ump-table" id="umpTable">
            <thead>
              <tr>
                <th>No.</th>
                <th>PROPINSI</th>
                <th>UMP (Rp)</th>
                <th>LEBIH DARI <span id="multiplierDisplay5">1.2</span> X UMP (Rp)</th>
              </tr>
            </thead>
            <tbody id="umpTableBody">
              <tr>
                <td colspan="4" class="no-data">Belum ada data UMP. Klik "Edit UMP" untuk menambahkan provinsi.</td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </main>

  <footer>© 2025 CDC Universitas Andalas — All Rights Reserved</footer>

  <!-- Edit Pembobotan Modal -->
  <div id="editModal" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <h2>Edit Pembobotan IKU-1</h2>
        <button class="close-btn" onclick="closeEditModal()">&times;</button>
      </div>
      
      <div class="modal-body">
        <!-- Multiplier Setting -->
        <div class="multiplier-setting">
          <h4>Pengaturan Pengali UMP</h4>
          <p>Nilai ini akan digunakan untuk menghitung "≥ Xx UMP" dan "< Xx UMP" dalam kriteria Bekerja dan Wiraswasta</p>
          <div class="form-group">
            <label>Pengali UMP (contoh: 1.2, 1.5, 2.0):</label>
            <input type="number" id="umpMultiplier" value="1.2" step="0.1" min="0.5" max="5">
          </div>
        </div>

        <h3>Kriteria Bekerja</h3>
        <div class="edit-grid">
          <div class="form-group">
            <label>≤ 6 bulan (Gaji ≥ Xx UMP):</label>
            <input type="number" id="edit_bekerja_t6" value="1.0" step="0.1">
          </div>
          <div class="form-group">
            <label>6 < Waktu ≤ 12 bulan (Gaji ≥ Xx UMP):</label>
            <input type="number" id="edit_bekerja_t12_high" value="0.8" step="0.1">
          </div>
          <div class="form-group">
            <label>≤ 6 bulan (Gaji < Xx UMP):</label>
            <input type="number" id="edit_bekerja_t6_low" value="0.8" step="0.1">
          </div>
          <div class="form-group">
            <label>6 < Waktu ≤ 12 bulan (Gaji < Xx UMP):</label>
            <input type="number" id="edit_bekerja_t12" value="0.6" step="0.1">
          </div>
        </div>

        <h3>Kriteria Wiraswasta</h3>
        <div class="edit-grid">
          <div class="form-group">
            <label>≤ 6 bulan (Pendapatan ≥ Xx UMP):</label>
            <input type="number" id="edit_wiraswasta_t6" value="1.2" step="0.1">
          </div>
          <div class="form-group">
            <label>6 < Waktu ≤ 12 bulan (Pendapatan ≥ Xx UMP):</label>
            <input type="number" id="edit_wiraswasta_t12_high" value="1.0" step="0.1">
          </div>
          <div class="form-group">
            <label>≤ 6 bulan (Pendapatan < Xx UMP):</label>
            <input type="number" id="edit_wiraswasta_t6_low" value="1.0" step="0.1">
          </div>
          <div class="form-group">
            <label>6 < Waktu ≤ 12 bulan (Pendapatan < Xx UMP):</label>
            <input type="number" id="edit_wiraswasta_t12" value="0.8" step="0.1">
          </div>
        </div>

        <h3>Kriteria Pendidikan Lanjut</h3>
        <div class="form-group">
          <label>Pembobotan untuk melanjutkan studi:</label>
          <input type="number" id="edit_pendidikan" value="0.6" step="0.1">
        </div>
      </div>

      <div class="modal-footer">
        <button class="btn btn-secondary" onclick="closeEditModal()">Batal</button>
        <button class="btn" onclick="savePembobotan()">Simpan Pembobotan</button>
      </div>
    </div>
  </div>

  <!-- Edit UMP Modal -->
  <div id="editUMPModal" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <h2>Edit Upah Minimum Provinsi</h2>
        <button class="close-btn" onclick="closeEditUMPModal()">&times;</button>
      </div>
      
      <div class="modal-body">
        <div class="form-group">
          <label>Nama Provinsi:</label>
          <input type="text" id="newProvinsi" placeholder="Contoh: Sumatera Barat">
        </div>
        <div class="form-group">
          <label>UMP (Rp):</label>
          <input type="number" id="newUMP" placeholder="Contoh: 2994193" oninput="calculate1Point2XUMP()">
        </div>
        <div class="form-group">
          <label id="calculatedLabel"></label>
          <input type="text" id="calculatedUMP" readonly>
        </div>
        <button class="btn" id="addProvinsiBtn" onclick="addProvinsi()" style="width: 100%;">Tambah Provinsi</button>

        <hr style="margin: 30px 0; border: none; border-top: 2px solid #e9ecef;">

        <h3>Provinsi yang Ada</h3>
        <div id="provinsiList" style="margin-top: 15px;">
          <p class="no-data">Belum ada data provinsi</p>
        </div>
      </div>

      <div class="modal-footer">
        <button class="btn btn-secondary" onclick="closeEditUMPModal()">Tutup</button>
      </div>
    </div>
  </div>

  <script>
    // Global variables
    let umpData = [];
    let editingIndex = -1;
    let pembobotan = {
      bekerja: { t6: 1.0, t12_high: 0.8, t6_low: 0.8, t12: 0.6 },
      wiraswasta: { t6: 1.2, t12_high: 1.0, t6_low: 1.0, t12: 0.8 },
      pendidikan: 0.6,
      multiplier: 1.2
    };

    // Display current date
    const dateElement = document.getElementById("currentDate");
    const today = new Date();
    const options = { weekday: 'long', year: 'numeric', month: 'short', day: 'numeric' };
    dateElement.textContent = today.toLocaleDateString('id-ID', options);

    // Load data from server
    async function loadUMPData() {
      try {
        const response = await fetch('/pembobotan/ump');
        const result = await response.json();
        if (result.success && result.data) {
          umpData = result.data;
          updateUMPTable();
        }
      } catch (error) {
        console.error('Error loading UMP data:', error);
      }
    }

    // Update UMP table display
    function updateUMPTable() {
      const tableBody = document.getElementById('umpTableBody');
      if (umpData.length === 0) {
        tableBody.innerHTML = '<tr><td colspan="4" class="no-data">Belum ada data UMP. Klik "Edit UMP" untuk menambahkan provinsi.</td></tr>';
        return;
      }

      tableBody.innerHTML = '';
      umpData.forEach((item, index) => {
        const row = document.createElement('tr');
        const calculated = (item.ump * pembobotan.multiplier).toLocaleString('id-ID');
        row.innerHTML = `
          <td>${index + 1}</td>
          <td>${item.provinsi}</td>
          <td>${item.ump.toLocaleString('id-ID')}</td>
          <td>${calculated}</td>
        `;
        tableBody.appendChild(row);
      });
    }

    // Calculate 1.2× UMP
    function calculate1Point2XUMP() {
      const ump = document.getElementById('newUMP').value;
      const label = document.getElementById('calculatedLabel');
      const result = document.getElementById('calculatedUMP');
      
      if (ump) {
        const calculated = parseFloat(ump) * pembobotan.multiplier;
        result.value = calculated.toLocaleString('id-ID');
        label.textContent = `${pembobotan.multiplier} × UMP (Rp):`;
      } else {
        result.value = '';
        label.textContent = '';
      }
    }

    // Add or update province
    async function addProvinsi() {
      const provinsi = document.getElementById('newProvinsi').value.trim();
      const ump = document.getElementById('newUMP').value;

      if (!provinsi || !ump) {
        alert('Mohon isi semua field!');
        return;
      }

      const umpValue = parseFloat(ump);

      try {
        // If editing, use PUT request
        if (editingIndex !== -1) {
          const response = await fetch(`/pembobotan/ump/${editingIndex}`, {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ provinsi, ump: umpValue })
          });

          const result = await response.json();
          if (result.success) {
            alert('Provinsi berhasil diperbarui!');
            document.getElementById('newProvinsi').value = '';
            document.getElementById('newUMP').value = '';
            document.getElementById('calculatedUMP').value = '';
            editingIndex = -1;
            const btn = document.getElementById('addProvinsiBtn');
            if (btn) btn.textContent = 'Tambah Provinsi';
            loadUMPData();
          } else {
            alert(result.message || 'Gagal memperbarui provinsi');
          }
        } else {
          // Add new province
          const response = await fetch('/pembobotan/ump', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ provinsi, ump: umpValue })
          });

          const result = await response.json();
          if (result.success) {
            alert('Provinsi berhasil ditambahkan!');
            document.getElementById('newProvinsi').value = '';
            document.getElementById('newUMP').value = '';
            document.getElementById('calculatedUMP').value = '';
            loadUMPData();
          } else {
            alert(result.message || 'Gagal menambahkan provinsi');
          }
        }
      } catch (error) {
        alert('Terjadi kesalahan saat menambahkan provinsi');
      }
    }

    // Update provinsi list in modal
    function updateProvinsiList() {
      const list = document.getElementById('provinsiList');
      if (umpData.length === 0) {
        list.innerHTML = '<p class="no-data">Belum ada data provinsi</p>';
        return;
      }

      list.innerHTML = '';
      umpData.forEach((item, index) => {
        const div = document.createElement('div');
        div.style.cssText = 'display: flex; justify-content: space-between; align-items: center; padding: 10px; border-bottom: 1px solid #e9ecef;';
        div.innerHTML = `
          <div>
            <strong>${item.provinsi}</strong><br>
            <small>UMP: Rp ${item.ump.toLocaleString('id-ID')}</small>
          </div>
          <div style="display: flex; gap: 8px;">
            <button class="btn" style="padding: 5px 10px; font-size: 12px; background: var(--accent);" onclick="editProvinsi(${item.id})">Edit</button>
            <button class="btn" style="padding: 5px 10px; font-size: 12px; background: #dc3545;" onclick="deleteProvinsi(${item.id})">Hapus</button>
          </div>
        `;
        list.appendChild(div);
      });
    }

    // Delete province
    async function deleteProvinsi(id) {
      if (!confirm('Apakah Anda yakin ingin menghapus provinsi ini?')) return;

      try {
        const response = await fetch(`/pembobotan/ump/${id}`, {
          method: 'DELETE'
        });

        const result = await response.json();
        if (result.success) {
          alert('Provinsi berhasil dihapus!');
          loadUMPData();
        } else {
          alert(result.message || 'Gagal menghapus provinsi');
        }
      } catch (error) {
        alert('Terjadi kesalahan saat menghapus provinsi');
      }
    }

    // Modal functions
    function openEditModal() {
      document.getElementById('editModal').classList.add('active');
      document.getElementById('umpMultiplier').value = pembobotan.multiplier;
      document.getElementById('edit_bekerja_t6').value = pembobotan.bekerja.t6;
      document.getElementById('edit_bekerja_t12_high').value = pembobotan.bekerja.t12_high;
      document.getElementById('edit_bekerja_t6_low').value = pembobotan.bekerja.t6_low;
      document.getElementById('edit_bekerja_t12').value = pembobotan.bekerja.t12;
      document.getElementById('edit_wiraswasta_t6').value = pembobotan.wiraswasta.t6;
      document.getElementById('edit_wiraswasta_t12_high').value = pembobotan.wiraswasta.t12_high;
      document.getElementById('edit_wiraswasta_t6_low').value = pembobotan.wiraswasta.t6_low;
      document.getElementById('edit_wiraswasta_t12').value = pembobotan.wiraswasta.t12;
      document.getElementById('edit_pendidikan').value = pembobotan.pendidikan;
    }

    function closeEditModal() {
      document.getElementById('editModal').classList.remove('active');
    }

    function openEditUMPModal() {
      document.getElementById('editUMPModal').classList.add('active');
      document.getElementById('calculatedLabel').textContent = `${pembobotan.multiplier} × UMP (Rp):`;
      loadUMPData();
      updateProvinsiList();
    }

    function closeEditUMPModal() {
      document.getElementById('editUMPModal').classList.remove('active');
      editingIndex = -1;
      document.getElementById('newProvinsi').value = '';
      document.getElementById('newUMP').value = '';
      document.getElementById('calculatedUMP').value = '';
      const btn = document.getElementById('addProvinsiBtn');
      if (btn) btn.textContent = 'Tambah Provinsi';
    }

    // Edit province - fill form with selected province data
    function editProvinsi(id) {
      const provinsi = umpData.find(p => p.id === id);
      if (!provinsi) return;

      // Fill the form
      document.getElementById('newProvinsi').value = provinsi.provinsi;
      document.getElementById('newUMP').value = provinsi.ump;
      calculate1Point2XUMP();

      // Change button text
      const btn = document.getElementById('addProvinsiBtn');
      if (btn) btn.textContent = 'Update Provinsi';

      // Set editing mode
      editingIndex = id;

      // Scroll to form
      document.querySelector('.modal-body').scrollTo({ top: 0, behavior: 'smooth' });
    }

    // Save pembobotan
    function savePembobotan() {
      pembobotan.multiplier = parseFloat(document.getElementById('umpMultiplier').value);
      pembobotan.bekerja.t6 = parseFloat(document.getElementById('edit_bekerja_t6').value);
      pembobotan.bekerja.t12_high = parseFloat(document.getElementById('edit_bekerja_t12_high').value);
      pembobotan.bekerja.t6_low = parseFloat(document.getElementById('edit_bekerja_t6_low').value);
      pembobotan.bekerja.t12 = parseFloat(document.getElementById('edit_bekerja_t12').value);
      pembobotan.wiraswasta.t6 = parseFloat(document.getElementById('edit_wiraswasta_t6').value);
      pembobotan.wiraswasta.t12_high = parseFloat(document.getElementById('edit_wiraswasta_t12_high').value);
      pembobotan.wiraswasta.t6_low = parseFloat(document.getElementById('edit_wiraswasta_t6_low').value);
      pembobotan.wiraswasta.t12 = parseFloat(document.getElementById('edit_wiraswasta_t12').value);
      pembobotan.pendidikan = parseFloat(document.getElementById('edit_pendidikan').value);

      // Update display
      updateMultiplierDisplay();
      updateTables();
      document.getElementById('pendidikanValue').textContent = pembobotan.pendidikan;
      alert('Pembobotan berhasil disimpan!');
      closeEditModal();
    }

    // Update multiplier display throughout the page
    function updateMultiplierDisplay() {
      document.getElementById('multiplierDisplay').textContent = pembobotan.multiplier;
      document.getElementById('multiplierDisplay2').textContent = pembobotan.multiplier;
      document.getElementById('multiplierDisplay3').textContent = pembobotan.multiplier;
      document.getElementById('multiplierDisplay4').textContent = pembobotan.multiplier;
      document.getElementById('multiplierDisplay5').textContent = pembobotan.multiplier;
    }

    // Update table values
    function updateTables() {
      const bekerjaRows = document.querySelectorAll('#bekerjaTable tbody tr');
      bekerjaRows[0].querySelectorAll('td')[1].textContent = pembobotan.bekerja.t6;
      bekerjaRows[0].querySelectorAll('td')[2].textContent = pembobotan.bekerja.t12_high;
      bekerjaRows[1].querySelectorAll('td')[1].textContent = pembobotan.bekerja.t6_low;
      bekerjaRows[1].querySelectorAll('td')[2].textContent = pembobotan.bekerja.t12;

      const wiraswastaRows = document.querySelectorAll('#wiraswastaTable tbody tr');
      wiraswastaRows[0].querySelectorAll('td')[1].textContent = pembobotan.wiraswasta.t6;
      wiraswastaRows[0].querySelectorAll('td')[2].textContent = pembobotan.wiraswasta.t12_high;
      wiraswastaRows[1].querySelectorAll('td')[1].textContent = pembobotan.wiraswasta.t6_low;
      wiraswastaRows[1].querySelectorAll('td')[2].textContent = pembobotan.wiraswasta.t12;
    }

    // Edit cell on click (quick edit)
    function editCell(element, key) {
      const currentValue = parseFloat(element.textContent);
      const newValue = prompt('Masukkan nilai baru:', currentValue);
      
      if (newValue !== null && !isNaN(newValue)) {
        element.textContent = parseFloat(newValue);
        saveToLocalStorage(key, parseFloat(newValue));
      }
    }

    // Save to localStorage (client-side persistence)
    function saveToLocalStorage(key, value) {
      if (key.startsWith('bekerja_')) {
        pembobotan.bekerja[key.replace('bekerja_', '').replace(/_(?=\d|low|high)/g, '')] = value;
      } else if (key.startsWith('wiraswasta_')) {
        pembobotan.wiraswasta[key.replace('wiraswasta_', '').replace(/_(?=\d|low|high)/g, '')] = value;
      } else if (key === 'pendidikan') {
        pembobotan.pendidikan = value;
      }
      localStorage.setItem('pembobotan', JSON.stringify(pembobotan));
    }

    // Close modals when clicking outside
    window.onclick = function(event) {
      if (event.target.classList.contains('modal')) {
        event.target.classList.remove('active');
      }
    }

    // Load on page init
    loadUMPData();
  </script>
</body>
</html>
